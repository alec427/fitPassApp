{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/session.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<h1> Authentication Sample </h1>\\n<form *ngIf=\\\"!user\\\">\\n  <h2> Login or Signup </h2>\\n  <label> Username </label>\\n  <input type=\\\"text\\\" [(ngModel)]=\\\"formInfo.username\\\" name=\\\"username\\\"/>\\n  <br>\\n  <label> Password </label>\\n  <input type=\\\"password\\\" [(ngModel)]=\\\"formInfo.password\\\" name=\\\"password\\\"/>\\n\\n  <button (click)=\\\"login()\\\"> login </button>\\n  <button (click)=\\\"signup()\\\"> signup </button>\\n</form>\\n\\n<div *ngIf=\\\"user\\\">\\n  <h2> You are now logged in as {{ user.username }}!! </h2>\\n  <p> Here's the user object </p>\\n  <pre> {{ user | json }} </pre>\\n\\n  <p *ngIf=\\\"privateData\\\"> Here's some data fetched from a protected API </p>\\n  <pre> {{ privateData | json }} </pre>\\n  <button (click)=\\\"logout()\\\"> logout </button>\\n  <button (click)=\\\"getPrivateData()\\\"> Get private data </button>\\n</div>\\n\\n<p class=\\\"error\\\"> {{ error }} </p>\\n\"","import { Component } from '@angular/core';\nimport { SessionService } from './session.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  privateData: any;\n  formInfo = {\n    username: '',\n    password: ''\n  };\n\n  user: any;\n  error: string;\n\n  constructor(private session: SessionService) { }\n\n  login() {\n    this.session.login(this.formInfo)\n      .subscribe(\n        (user) => this.user = user,\n        (err) => this.error = err\n      );\n  }\n\n  signup() {\n    this.session.signup(this.formInfo)\n      .subscribe(\n        (user) => this.user = user,\n        (err) => this.error = err\n      );\n  }\n\n  logout() {\n  this.session.logout()\n    .subscribe(\n      () => this.user = null,\n      (err) => this.error = err\n    );\n}\n\ngetPrivateData() {\n  this.session.getPrivateData()\n    .subscribe(\n      (data) => this.privateData = data,\n      (err) => this.error = err\n    );\n}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { SessionService } from \"./session.service\";\nimport { FormsModule } from '@angular/forms';\n\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [ SessionService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { catchError } from 'rxjs/internal/operators/catchError';\n\n\n@Injectable()\nexport class SessionService {\n\n  constructor(private http: Http) { }\n\n  handleError(e) {\n    return Observable.throw(e.json().message);\n  }\n\n  signup(user) {\n    return this.http.post(`/signup`, user)\n      .pipe(map(res => res.json()))\n      .pipe(catchError(this.handleError));\n  }\n\n  login(user) {\n    return this.http.post(`/login`, user)\n      .pipe(map(res => res.json()))\n      .pipe(catchError(this.handleError));\n  }\n\n  logout() {\n    return this.http.post(`/logout`, {})\n      .pipe(map(res => res.json()))\n      .pipe(catchError(this.handleError));\n  }\n\n  isLoggedIn() {\n    return this.http.get(`/loggedin`)\n      .pipe(map(res => res.json()))\n      .pipe(catchError(this.handleError));\n  }\n\n  getPrivateData() {\n    return this.http.get(`/private`)\n      .pipe(map(res => res.json()))\n      .pipe(catchError(this.handleError));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}